-----------------------------------------------------
			help for solve kata issue
-----------------------------------------------------

1/ sort string:

-----------------------------------------------------

import java.util.Arrays;
public class ArrayDemo {
   public static void main(String[] args) {
      
      // initialize unsorted array
      char arr[] = { 'K', 'L', 'D', 'E', 'A', 'C', 'G', 'H' };
      System.out.print("Original Array: [");
      
      // print the array
      for (int i = 0; i < arr.length; i++) {
         System.out.print(arr[i] + " ");
      }
      System.out.println("]");
     
      // sort the array
      Arrays.sort(arr, 0, arr.length);
      System.out.print("Sorted Array: [");
      
      // print the array
      for (int i = 0; i < arr.length; i++) {
         System.out.print(arr[i] + " ");
      }
      System.out.println("]");
   }
}
-----------------------------------------------------


String to char:    char[] chars = str.toCharArray();

-----------------------------------------------------
findDuplicateBySetAdd
---------------------

 public static <T> Set<T> findDuplicateBySetAdd(List<T> list) {

        Set<T> items = new HashSet<>();
        return list.stream()
                .filter(n -> !items.add(n)) // Set.add() returns false if the element was already in the set.
                .collect(Collectors.toSet());

    }

----------------------------------------------------
reverse the string
------------------

import java.lang.*;
import java.io.*;
import java.util.*;
 
public class Test {
    public static void main(String[] args)
    {
        String str = "abdcd";
 
        // conversion from String object to StringBuffer
        StringBuffer sbr = new StringBuffer(str);
        // To reverse the string
        sbr.reverse();
        System.out.println(sbr);
    }
}

----------------------------------------------------
substring
---------

String strtorev = "Test Code";
        String newString = "";
        int len = strtorev.length();
        System.out.println(len);
        for(int i =0;i<len;i++)
        {
            String subChar = strtorev.substring(strtorev.length()-1-i,strtorev.length()-i);
            newString += subChar;
            System.out.println(newString);
        }

----------------------------------------------------

 // get unique elements after removing duplicates
        List<String> distinctCompanies = companies
                .stream()
                .distinct()
                .collect(Collectors.toList());

----------------------------------------------------
get duplicate elements
        Set<String> duplicateCompanies = companies
                .stream()
                .filter(company -> Collections.frequency(companies, company) > 1)
                .collect(Collectors.toSet());